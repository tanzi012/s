quality <- read.csv('C:/quality.csv') 

#analysing the quality dataset 
str(quality) 


'data.frame': 131 obs. of 14 variables: 
$ MemberID : int 1 2 3 4 5 6 7 8 9 10 ... 
$ InpatientDays : int 0 1 0 0 8 2 16 2 2 4 ... 
$ ERVisits : int 0 1 0 1 2 0 1 0 1 2 ... 
$ OfficeVisits : int 18 6 5 19 19 9 8 8 4 0 ... 
$ Narcotics : int 1 1 3 0 3 2 1 0 3 2 ... 
$ DaysSinceLastERVisit: num 731 411 731 158 449 ... 
$ Pain : int 10 0 10 34 10 6 4 5 5 2 ... 
$ TotalVisits : int 18 8 5 20 29 11 25 10 7 6 ... 
$ ProviderCount : int 21 27 16 14 24 40 19 11 28 21 ... 
$ MedicalClaims : int 93 19 27 59 51 53 40 28 20 17 ... 
$ ClaimLines : int 222 115 148 242 204 156 261 87 98 66 ... 
$ StartedOnCombination: logi FALSE FALSE FALSE FALSE FALSE FALSE ... 
$ AcuteDrugGapSmall : int 0 1 5 0 0 4 0 0 0 0 ... 
$ PoorCare : int 0 0 0 0 0 1 0 0 1 0 ... 
> table(quality$PoorCare)

 
 table(quality$PoorCare)

install.packages("caTools")
library(caTools)

set.seed(88) 
split = sample.split(quality$PoorCare, SplitRatio = 0.75)


split

qualityTrain = subset(quality, split == TRUE) 
 qualityTest = subset(quality, split == FALSE) 
 nrow(qualityTrain)

 QualityLog = glm(PoorCare ~ OfficeVisits + Narcotics,data=qualityTrain, family=binomial)

 summary(QualityLog)

 

 > predictTrain = predict(QualityLog, type="response") 
> summary(predictTrain)  


> tapply(predictTrain, qualityTrain$PoorCare, mean) 

> table(qualityTrain$PoorCare, predictTrain > 0.5) 

> 10/25 
[1] 0.4 

> 70/74 
[1] 0.9459459 

> table(qualityTrain$PoorCare, predictTrain > 0.7) 
FALSE TRUE 
0 73 1 
1 17 8 

> 8/25 
[1] 0.32 

> 73/74 
[1] 0.9864865 

> table(qualityTrain$PoorCare, predictTrain > 0.2) 


> 16/25 
[1] 0.64 

> 54/74 
[1] 0.7297297 

> install.packages("ROCR") 


> library(ROCR) 


> ROCRpred = prediction(predictTrain, qualityTrain$PoorCare) 

> ROCRperf = performance(ROCRpred, "tpr", "fpr") 

> plot(ROCRperf)


